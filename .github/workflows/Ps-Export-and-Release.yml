name: release-deployment-settings
# Export solution from DEV environment
#  unpack it and prepare, commit and push a git branch with the changes

on:
  workflow_dispatch:
    inputs:
      #Do Not change these values
      #Values are set by the caller
      #caller sample: release-action-call.ymnl
      solution_name:
        description: 'The solution name.'
        type: string
        default: Test
      solution_release_folder:
       description: 'folder where the released binaries are going to be hosted *do not change*'
       type: string
       default: solutions/Test
      solution_file:
        description: 'Solution zip file name'
        required: true
        default: Test_1_0_0_2_managed.zip
      
    
env:
#edit your values here
  # PRODUCTION_ENVIRONMENT_URL: 'https://org917f155b.crm.dynamics.com'
  PRODUCTION_ENVIRONMENT_URL: 'https://org1841943a.crm.dynamics.com'
  CLIENT_ID: 'cce7ff3a-a155-46fd-944a-07df4e69c036'
  TENANT_ID: '56ca820a-1a59-428f-b459-186cbb56608b'
permissions:
  contents: write
jobs:
  release-test-deployment-settings:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
        
    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: ${{env.PRODUCTION_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Debug files
      run: |
        echo "Workspace: $GITHUB_WORKSPACE"
        ls -R $GITHUB_WORKSPACE
        
    # - name: Ensure required connections exist
    #   shell: pwsh
    #   run: |
    #     .\pipelines\Ensure-Connections.ps1 `
    #       -EnvironmentUrl '${{ env.PRODUCTION_ENVIRONMENT_URL }}' `
    #       -TenantId '${{ env.TENANT_ID }}' `
    #       -ClientId '${{ env.CLIENT_ID }}' `
    #       -ClientSecret '${{ secrets.PowerPlatformSPN }}' `
    #       -DeploymentSettingsPath '.\pipelines\deploymentSettings.json'

  approve-prod:
    runs-on: windows-latest
    needs: release-test-deployment-settings
    steps:
      - name: Wait for approval
        uses: peter-evans/wait-for-approval@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          reviewers: user1,user2
          issue-title: "Approve Prod Deployment"
          issue-body: "Please approve this deployment to Prod."
          
  deploy-to-prod:
    runs-on: windows-latest
    needs: approve-prod
    steps:
    - name: Import solution to prod env
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{env.PRODUCTION_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-file: ${{ inputs.solution_release_folder }}/${{ inputs.solution_file }}
        use-deployment-settings-file: true
        deployment-settings-file: ${{ inputs.solution_release_folder }}/DeploymentSettings.json
        force-overwrite: true
        publish-changes: true
